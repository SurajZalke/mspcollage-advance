import { Question, PlayerAnswer } from '../types';
import { GoogleGenerativeAI } from '@google/generative-ai';

const GEMINI_API_KEY = "AIzaSyA-HGWK-h5vO2h9GgD9Wsun-guwtKNZnJ4"; // Replace with your actual Gemini API Key. Use environment variables in production.

const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);

/**
 * Calculate the correct answer rate for a player based on their answer history
 * @param answers Array of player answers
 * @returns Percentage of correct answers (0-100)
 */
export const calculateCorrectAnswerRate = (answers: PlayerAnswer[]): number => {
  if (!answers || answers.length === 0) return 100; // Default to 100% if no answers yet
  
  const correctAnswers = answers.filter(answer => answer.correct).length;
  return (correctAnswers / answers.length) * 100;
};

/**
 * Generate an AI explanation for a question
 * @param question The question that needs explanation
 * @param selectedOption The option selected by the player
 * @returns A step-by-step explanation of the question
 */
export const generateAIExplanation = async (question: Question, selectedOption: string): Promise<string> => {
  try {
    const correctOption = question.options.find(opt => opt.id === question.correctOption);
    const selectedOptionObj = question.options.find(opt => opt.id === selectedOption);
    
    if (!correctOption) return "Sorry, I couldn't generate an explanation for this question.";

    // Construct a prompt for the AI service
    const prompt = `Given the following quiz question and options, provide a concise and accurate explanation.

    Question: ${question.text}
    Correct Answer: ${correctOption.text} (${correctOption.id.toUpperCase()})
    Selected Answer: ${selectedOptionObj?.text || selectedOption} (${selectedOption.toUpperCase()})
    
    Provide a single, unified, and concise explanation. This explanation should:
    1. Briefly state the core concept or principle related to the correct answer (1-2 sentences).
    2. Explain why the selected answer is wrong (if applicable).
    3. Explain why the correct answer is right.
    
    Do not provide multiple explanations, separate sections, or any introductory/concluding remarks. Focus solely on the points above.`;

    let aiGeneratedExplanation = "";
    const MAX_RETRIES = 2;
    let retries = 0;
    let success = false;

    while (retries < MAX_RETRIES && !success) {
      try {
        console.log("AI Explanation Prompt:", prompt); // Log the prompt for debugging
        const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash"});
        const result = await model.generateContent(prompt);
        const response = await result.response;
        aiGeneratedExplanation = response.text();
        success = true;
      } catch (error: any) {
        console.error(`Error calling AI service (attempt ${retries + 1}/${MAX_RETRIES}):`, error);
        if (error.response && error.response.status === 429) { // Check for Too Many Requests status
          const delay = Math.pow(2, retries) * 1000; // Exponential backoff
          console.warn(`Rate limit exceeded. Retrying in ${delay / 1000} seconds...`);
          await new Promise(resolve => setTimeout(resolve, delay));
          retries++;
        } else {
          let detailedErrorMessage = "Failed to get a detailed explanation from AI. Please try again later.";
          if (error instanceof Error) {
            detailedErrorMessage = `Failed to get a detailed explanation from AI: ${error.message}`;
          } else {
            detailedErrorMessage = `Failed to get a detailed explanation from AI: ${JSON.stringify(error)}`;
          }
          aiGeneratedExplanation = detailedErrorMessage;
          break; // Exit loop for non-429 errors
        }
      }
    }

    if (!success) {
      aiGeneratedExplanation = "Failed to get a detailed explanation from AI after multiple attempts due to quota limits. Please check your API plan.";
    }

    let explanationHtml = `<div class="p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg mt-4 border border-blue-200 dark:border-blue-800">
      <h3 class="text-lg font-bold mb-2 text-blue-700 dark:text-blue-300">AI Explanation</h3>
      <p class="mb-3">Let me explain this question step by step:</p>
      <div class="space-y-2">
        <p><strong>Question:</strong> ${question.text}</p>
        <p><strong>Your answer:</strong> ${selectedOptionObj?.text || selectedOption} ${selectedOption !== question.correctOption ? '(incorrect)' : '(correct)'}</p>
        <p><strong>Correct answer:</strong> ${correctOption.text}</p>
        <p class="mt-2"><strong>Explanation:</strong></p>
        <p>${aiGeneratedExplanation.replace(/\n/g, '<br/>')}</p>
      </div>
      <p class="text-xs text-blue-500 dark:text-blue-400 mt-4">This explanation was generated by AI to help you understand the concept better.</p>
    </div>`;

    return explanationHtml;
  } catch (error) {
    console.error("Error generating AI explanation:", error);
    return "Sorry, I couldn't generate an explanation for this question.";
  }
};