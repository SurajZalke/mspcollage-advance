import { Question, PlayerAnswer } from '@/types';

/**
 * Calculate the correct answer rate for a player based on their answer history
 * @param answers Array of player answers
 * @returns Percentage of correct answers (0-100)
 */
export const calculateCorrectAnswerRate = (answers: PlayerAnswer[]): number => {
  if (!answers || answers.length === 0) return 100; // Default to 100% if no answers yet
  
  const correctAnswers = answers.filter(answer => answer.correct).length;
  return (correctAnswers / answers.length) * 100;
};

/**
 * Generate an AI explanation for a question
 * @param question The question that needs explanation
 * @param selectedOption The option selected by the player
 * @returns A step-by-step explanation of the question
 */
export const generateAIExplanation = async (question: Question, selectedOption: string): Promise<string> => {
  try {
    // For now, we'll use a simple template-based approach
    // In a production environment, you would integrate with an actual AI service like OpenAI
    
    const correctOption = question.options.find(opt => opt.id === question.correctOption);
    const selectedOptionObj = question.options.find(opt => opt.id === selectedOption);
    
    if (!correctOption) return "Sorry, I couldn't generate an explanation for this question.";
    
    let explanation = `<div class="p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg mt-4 border border-blue-200 dark:border-blue-800">
      <h3 class="text-lg font-bold mb-2 text-blue-700 dark:text-blue-300">AI Explanation</h3>
      <p class="mb-3">Let me explain this question step by step:</p>
      <div class="space-y-2">
    `;
    
    // Add question context
    explanation += `<p><strong>Question:</strong> ${question.text}</p>`;
    
    // Add explanation based on question type (this would be more sophisticated with a real AI)
    if (selectedOption !== question.correctOption) {
      explanation += `
        <p><strong>Your answer:</strong> ${selectedOptionObj?.text || selectedOption} (incorrect)</p>
        <p><strong>Correct answer:</strong> ${correctOption.text}</p>
        <p class="mt-2"><strong>Explanation:</strong></p>
        <p>The correct answer is ${correctOption.id.toUpperCase()} because ${generateSimpleExplanation(question)}</p>
      `;
    } else {
      explanation += `
        <p><strong>Your answer:</strong> ${selectedOptionObj?.text || selectedOption} (correct)</p>
        <p class="mt-2"><strong>Explanation:</strong></p>
        <p>You selected the correct answer! ${generateSimpleExplanation(question)}</p>
      `;
    }
    
    explanation += `
      </div>
      <p class="text-xs text-blue-500 dark:text-blue-400 mt-4">This explanation was generated by AI to help you understand the concept better.</p>
    </div>`;
    
    return explanation;
  } catch (error) {
    console.error("Error generating AI explanation:", error);
    return "Sorry, I couldn't generate an explanation for this question.";
  }
};

/**
 * Generate a simple explanation based on the question
 * This is a placeholder for a real AI-generated explanation
 */
const generateSimpleExplanation = (question: Question): string => {
  // In a real implementation, this would call an AI service
  // For now, we'll return a generic explanation based on the question subject
  
  const questionLower = question.text.toLowerCase();
  
  if (questionLower.includes('math') || questionLower.includes('calculate') || questionLower.includes('equation')) {
    return "this mathematical concept requires applying the correct formula and calculating the result accurately.";
  } else if (questionLower.includes('science') || questionLower.includes('chemistry') || questionLower.includes('physics')) {
    return "this scientific principle is based on established laws and experimental evidence in the field.";
  } else if (questionLower.includes('history') || questionLower.includes('year') || questionLower.includes('century')) {
    return "historical facts and chronology are important to understand the context and significance of events.";
  } else {
    return "understanding the key concepts and relationships in the question leads to the correct answer.";
  }
};